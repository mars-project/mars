name: Pre-commit Checks

on: [pull_request]

jobs:
  checks:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Set up conda ${{ matrix.python-version }}
        env:
          PYTHON: ${{ matrix.python-version }}
        shell: bash
        run: |
          source ./ci/install-conda.sh
          python -m pip install --upgrade pip setuptools wheel coverage;

      - name: Install dependencies
        shell: bash
        run: |
          source ./ci/reload-env.sh
          export DEFAULT_VENV=$VIRTUAL_ENV

          pip install numpy scipy cython
          pip install -e ".[dev,extra]"
          pip install virtualenv flake8 codespell sphinx sphinx-intl
          conda list -n test

      - name: Lint with flake8
        shell: bash
        run: |
          source ./ci/reload-env.sh

          # stop the build if there are Python syntax errors or undefined names
          flake8 mars --count --show-source --statistics

          # special check for __init__.py
          grep -A 10000 '\[flake8\]' setup.cfg | awk '!/(F401|F811|__init__\.py)/' > flake8_init.ini
          flake8 --config=flake8_init.ini

          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 mars --config="default" --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Check spellings
        shell: bash
        run: |
          source ./ci/reload-env.sh
          codespell

      - name: Check file mode changes
        shell: bash
        run: |
          source ./ci/reload-env.sh
          git fetch origin master
          bash ci/modecheck.sh

      - name: Check imports
        shell: bash
        run: |
          source ./ci/reload-env.sh
          python ci/importcheck.py

      - name: Check copyright headers
        shell: bash
        run: |
          source ./ci/reload-env.sh
          python ci/copycheck.py

      - name: Check JS with ESLint
        shell: bash
        run: |
          source ./ci/reload-env.sh
          pushd mars/services/web/ui
          npm install
          npm run lint
          popd

      - name: Check documentation build
        shell: bash
        run: |
          source ./ci/reload-env.sh
          pushd docs
          pip install -r requirements-doc.txt
          make html
          popd
