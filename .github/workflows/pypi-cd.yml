name: Mars CD for PyPI

on:
  push:
    tags:
      - '*'

jobs:
  build:
    name: Build wheels on ${{ matrix.os }} for ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        arch: [auto]

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.3.1
        env:
          CIBW_BEFORE_BUILD: git reset --hard && pip install -r ci/requirements-wheel.txt
          CIBW_ARCHS: ${{ matrix.arch }}
          CIBW_SKIP: pp* *-musllinux* cp310-* *i686
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux1

      - name: Build source
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.arch == 'auto'}}
        run: |
          git reset --hard
          pip install -r ci/requirements-wheel.txt
          python setup.py sdist --formats=gztar --dist-dir=./wheelhouse

      - name: Release to pypi
        shell: bash
        env:
          PYPI_PWD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          if [[ "$GITHUB_REPOSITORY" == "mars-project/mars" ]]; then
            PYPI_REPO="https://upload.pypi.org/legacy/"
          else
            PYPI_REPO="https://test.pypi.org/legacy/"
          fi
          echo "[distutils]"             > ~/.pypirc
          echo "index-servers ="        >> ~/.pypirc
          echo "    pypi"               >> ~/.pypirc
          echo "[pypi]"                 >> ~/.pypirc
          echo "repository=$PYPI_REPO"  >> ~/.pypirc
          echo "username=pyodps"        >> ~/.pypirc
          echo "password=$PYPI_PWD"     >> ~/.pypirc
          python -m pip install twine
          python -m twine upload -r pypi --skip-existing wheelhouse/*

      - name: Upload artifacts to github
        uses: actions/upload-artifact@v1
        with:
          name: wheels
          path: ./wheelhouse
