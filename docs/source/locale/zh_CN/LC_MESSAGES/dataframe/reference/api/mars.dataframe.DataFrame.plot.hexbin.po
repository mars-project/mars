# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1999-2020, The Alibaba Group Holding Ltd.
# This file is distributed under the same license as the mars package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mars 0.4.0rc1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-04-22 19:57+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../source/dataframe/reference/api/mars.dataframe.DataFrame.plot.hexbin.rst:2
msgid "mars.dataframe.DataFrame.plot.hexbin"
msgstr ""

#: mars.dataframe.DataFrame.plot.hexbin:1 of
msgid "Generate a hexagonal binning plot."
msgstr ""

#: mars.dataframe.DataFrame.plot.hexbin:3 of
msgid ""
"Generate a hexagonal binning plot of `x` versus `y`. If `C` is `None` "
"(the default), this is a histogram of the number of occurrences of the "
"observations at ``(x[i], y[i])``."
msgstr ""

#: mars.dataframe.DataFrame.plot.hexbin:7 of
msgid ""
"If `C` is specified, specifies values at given coordinates ``(x[i], "
"y[i])``. These values are accumulated for each hexagonal bin and then "
"reduced according to `reduce_C_function`, having as default the NumPy's "
"mean function (:meth:`numpy.mean`). (If `C` is specified, it must also be"
" a 1-D sequence of the same length as `x` and `y`, or a column label.)"
msgstr ""

#: mars.dataframe.DataFrame.plot.hexbin of
msgid "Parameters"
msgstr ""

#: mars.dataframe.DataFrame.plot.hexbin:14 of
msgid "The column label or position for x points."
msgstr ""

#: mars.dataframe.DataFrame.plot.hexbin:16 of
msgid "The column label or position for y points."
msgstr ""

#: mars.dataframe.DataFrame.plot.hexbin:18 of
msgid "The column label or position for the value of `(x, y)` point."
msgstr ""

#: mars.dataframe.DataFrame.plot.hexbin:20 of
msgid ""
"Function of one argument that reduces all the values in a bin to a single"
" number (e.g. `np.mean`, `np.max`, `np.sum`, `np.std`)."
msgstr ""

#: mars.dataframe.DataFrame.plot.hexbin:23 of
msgid ""
"The number of hexagons in the x-direction. The corresponding number of "
"hexagons in the y-direction is chosen in a way that the hexagons are "
"approximately regular. Alternatively, gridsize can be a tuple with two "
"elements specifying the number of hexagons in the x-direction and the "
"y-direction."
msgstr ""

#: mars.dataframe.DataFrame.plot.hexbin:30 of
msgid "Additional keyword arguments are documented in :meth:`DataFrame.plot`."
msgstr ""

#: mars.dataframe.DataFrame.plot.hexbin of
msgid "Returns"
msgstr ""

#: mars.dataframe.DataFrame.plot.hexbin:33 of
msgid "The matplotlib ``Axes`` on which the hexbin is plotted."
msgstr ""

#: mars.dataframe.DataFrame.plot.hexbin of
msgid "Return type"
msgstr ""

#: mars.dataframe.DataFrame.plot.hexbin:39 of
msgid ":meth:`DataFrame.plot`"
msgstr ""

#: mars.dataframe.DataFrame.plot.hexbin:39 of
msgid "Make plots of a DataFrame."
msgstr ""

#: mars.dataframe.DataFrame.plot.hexbin:41 of
msgid ":meth:`matplotlib.pyplot.hexbin`"
msgstr ""

#: mars.dataframe.DataFrame.plot.hexbin:42 of
msgid ""
"Hexagonal binning plot using matplotlib, the matplotlib function that is "
"used under the hood."
msgstr ""

#: mars.dataframe.DataFrame.plot.hexbin:45 of
msgid "Examples"
msgstr ""

#: mars.dataframe.DataFrame.plot.hexbin:46 of
msgid ""
"The following examples are generated with random data from a normal "
"distribution."
msgstr ""

#: ../../source/dataframe/reference/api/mars.dataframe.DataFrame.plot.hexbin.rst:7
msgid ""
"(`Source code <../../../dataframe/reference/api/mars-dataframe-DataFrame-"
"plot-hexbin-1.py>`__, `png <../../../dataframe/reference/api/mars-"
"dataframe-DataFrame-plot-hexbin-1.png>`__, `hires.png "
"<../../../dataframe/reference/api/mars-dataframe-DataFrame-plot-"
"hexbin-1.hires.png>`__, `pdf <../../../dataframe/reference/api/mars-"
"dataframe-DataFrame-plot-hexbin-1.pdf>`__)"
msgstr ""

#: mars.dataframe.DataFrame.plot.hexbin:59 of
msgid ""
"The next example uses `C` and `np.sum` as `reduce_C_function`. Note that "
"`'observations'` values ranges from 1 to 5 but the result plot shows "
"values up to more than 25. This is because of the `reduce_C_function`."
msgstr ""

#: ../../source/dataframe/reference/api/mars.dataframe.DataFrame.plot.hexbin.rst:7
msgid ""
"(`Source code <../../../dataframe/reference/api/mars-dataframe-DataFrame-"
"plot-hexbin-2.py>`__)"
msgstr ""

