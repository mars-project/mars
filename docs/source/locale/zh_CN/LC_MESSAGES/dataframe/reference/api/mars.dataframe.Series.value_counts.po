# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1999-2020, The Alibaba Group Holding Ltd.
# This file is distributed under the same license as the mars package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mars 0.4.0rc1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-04-29 18:27+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../source/dataframe/reference/api/mars.dataframe.Series.value_counts.rst:2
msgid "mars.dataframe.Series.value\\_counts"
msgstr ""

#: mars.dataframe.Series.value_counts:1 of
msgid "Return a Series containing counts of unique values."
msgstr ""

#: mars.dataframe.Series.value_counts:3 of
msgid ""
"The resulting object will be in descending order so that the first "
"element is the most frequently-occurring element. Excludes NA values by "
"default."
msgstr ""

#: mars.dataframe.Series.value_counts of
msgid "Parameters"
msgstr ""

#: mars.dataframe.Series.value_counts:7 of
msgid ""
"If True then the object returned will contain the relative frequencies of"
" the unique values."
msgstr ""

#: mars.dataframe.Series.value_counts:10 of
msgid "Sort by frequencies."
msgstr ""

#: mars.dataframe.Series.value_counts:12 of
msgid "Sort in ascending order."
msgstr ""

#: mars.dataframe.Series.value_counts:14 of
msgid ""
"Rather than count values, group them into half-open bins, a convenience "
"for ``pd.cut``, only works with numeric data."
msgstr ""

#: mars.dataframe.Series.value_counts:17 of
msgid "Don't include counts of NaN."
msgstr ""

#: mars.dataframe.Series.value_counts:19 of
msgid ""
"'shuffle' or 'tree', 'tree' method provide a better performance, while "
"'shuffle' is recommended if aggregated result is very large."
msgstr ""

#: mars.dataframe.Series.value_counts of
msgid "Returns"
msgstr ""

#: mars.dataframe.Series.value_counts of
msgid "Return type"
msgstr ""

#: mars.dataframe.Series.value_counts:30 of
msgid ":meth:`Series.count`"
msgstr ""

#: mars.dataframe.Series.value_counts:30 of
msgid "Number of non-NA elements in a Series."
msgstr ""

#: mars.dataframe.Series.value_counts:32 of
msgid ":meth:`DataFrame.count`"
msgstr ""

#: mars.dataframe.Series.value_counts:33 of
msgid "Number of non-NA elements in a DataFrame."
msgstr ""

#: mars.dataframe.Series.value_counts:36 of
msgid "Examples"
msgstr ""

#: mars.dataframe.Series.value_counts:48 of
msgid ""
"With `normalize` set to `True`, returns the relative frequency by "
"dividing all values by the sum of values."
msgstr ""

#: mars.dataframe.Series.value_counts:59 of
msgid "**bins**"
msgstr ""

#: mars.dataframe.Series.value_counts:61 of
msgid ""
"Bins can be useful for going from a continuous variable to a categorical "
"variable; instead of counting unique apparitions of values, divide the "
"index in the specified number of half-open bins."
msgstr ""

#: mars.dataframe.Series.value_counts:72 of
msgid "**dropna**"
msgstr ""

#: mars.dataframe.Series.value_counts:74 of
msgid "With `dropna` set to `False` we can also see NaN index values."
msgstr ""

