# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1999-2020, The Alibaba Group Holding Ltd.
# This file is distributed under the same license as the mars package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mars 0.4.0rc1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-04-22 19:36+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../source/dataframe/reference/api/mars.dataframe.read_sql_table.rst:2
msgid "mars.dataframe.read\\_sql\\_table"
msgstr ""

#: mars.dataframe.read_sql_table:1 of
msgid "Read SQL database table into a DataFrame."
msgstr ""

#: mars.dataframe.read_sql_table:3 of
msgid ""
"Given a table name and a SQLAlchemy connectable, returns a DataFrame. "
"This function does not support DBAPI connections."
msgstr ""

#: mars.dataframe.read_sql_table of
msgid "Parameters"
msgstr ""

#: mars.dataframe.read_sql_table:6 of
msgid "Name of SQL table in database."
msgstr ""

#: mars.dataframe.read_sql_table:8 of
msgid ""
"A database URI could be provided as as str. SQLite DBAPI connection mode "
"not supported."
msgstr ""

#: mars.dataframe.read_sql_table:11 of
msgid ""
"Name of SQL schema in database to query (if database flavor supports "
"this). Uses default schema if None (default)."
msgstr ""

#: mars.dataframe.read_sql_table:14 of
msgid "Column(s) to set as index(MultiIndex)."
msgstr ""

#: mars.dataframe.read_sql_table:16 of
msgid ""
"Attempts to convert values of non-string, non-numeric objects (like "
"decimal.Decimal) to floating point. Can result in loss of Precision."
msgstr ""

#: mars.dataframe.read_sql_table:19 of
msgid ""
"- List of column names to parse as dates. - Dict of ``{column_name: "
"format string}`` where format string is   strftime compatible in case of "
"parsing string times or is one of   (D, s, ns, ms, us) in case of parsing"
" integer timestamps. - Dict of ``{column_name: arg dict}``, where the arg"
" dict corresponds   to the keyword arguments of "
":func:`pandas.to_datetime`   Especially useful with databases without "
"native Datetime support,   such as SQLite."
msgstr ""

#: mars.dataframe.read_sql_table:20 of
msgid "List of column names to parse as dates."
msgstr ""

#: mars.dataframe.read_sql_table:21 of
msgid ""
"Dict of ``{column_name: format string}`` where format string is strftime "
"compatible in case of parsing string times or is one of (D, s, ns, ms, "
"us) in case of parsing integer timestamps."
msgstr ""

#: mars.dataframe.read_sql_table:24 of
msgid ""
"Dict of ``{column_name: arg dict}``, where the arg dict corresponds to "
"the keyword arguments of :func:`pandas.to_datetime` Especially useful "
"with databases without native Datetime support, such as SQLite."
msgstr ""

#: mars.dataframe.read_sql_table:29 of
msgid "List of column names to select from SQL table."
msgstr ""

#: mars.dataframe.read_sql_table:31 of
msgid ""
"If specified, returns an iterator where `chunksize` is the number of rows"
" to include in each chunk."
msgstr ""

#: mars.dataframe.read_sql_table:34 of
msgid "The number of rows to fetch for inferring dtypes."
msgstr ""

#: mars.dataframe.read_sql_table:36 of
msgid "Specifies chunk size for each dimension."
msgstr ""

#: mars.dataframe.read_sql_table:38 of
msgid "Extra kwargs to pass to sqlalchemy.create_engine"
msgstr ""

#: mars.dataframe.read_sql_table of
msgid "Returns"
msgstr ""

#: mars.dataframe.read_sql_table:41 of
msgid ""
"A SQL table is returned as two-dimensional data structure with labeled "
"axes."
msgstr ""

#: mars.dataframe.read_sql_table of
msgid "Return type"
msgstr ""

#: mars.dataframe.read_sql_table:48 of
msgid ":func:`read_sql_query`"
msgstr ""

#: mars.dataframe.read_sql_table:48 of
msgid "Read SQL query into a DataFrame."
msgstr ""

#: mars.dataframe.read_sql_table:50 of
msgid ":func:`read_sql`"
msgstr ""

#: mars.dataframe.read_sql_table:51 of
msgid "Read SQL query or database table into a DataFrame."
msgstr ""

#: mars.dataframe.read_sql_table:54 of
msgid "Notes"
msgstr ""

#: mars.dataframe.read_sql_table:55 of
msgid "Any datetime values with time zone information will be converted to UTC."
msgstr ""

#: mars.dataframe.read_sql_table:58 of
msgid "Examples"
msgstr ""

