# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1999-2020, The Alibaba Group Holding Ltd.
# This file is distributed under the same license as the mars package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mars 0.4.0rc1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-04-22 19:58+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../source/dataframe/reference/api/mars.dataframe.Series.dt.ceil.rst:2
msgid "mars.dataframe.Series.dt.ceil"
msgstr ""

#: mars.dataframe.Series.dt.ceil:1 of
msgid "Perform ceil operation on the data to the specified `freq`."
msgstr ""

#: mars.dataframe.Series.dt.ceil of
msgid "Parameters"
msgstr ""

#: mars.dataframe.Series.dt.ceil:3 of
msgid ""
"The frequency level to ceil the index to. Must be a fixed frequency like "
"'S' (second) not 'ME' (month end). See :ref:`frequency aliases "
"<timeseries.offset_aliases>` for a list of possible `freq` values."
msgstr ""

#: mars.dataframe.Series.dt.ceil:8 of
msgid ""
"Only relevant for DatetimeIndex:  - 'infer' will attempt to infer fall "
"dst-transition hours based on   order - bool-ndarray where True signifies"
" a DST time, False designates   a non-DST time (note that this flag is "
"only applicable for   ambiguous times) - 'NaT' will return NaT where "
"there are ambiguous times - 'raise' will raise an AmbiguousTimeError if "
"there are ambiguous   times.  .. versionadded:: 0.24.0"
msgstr ""

#: mars.dataframe.Series.dt.ceil:8 of
msgid "Only relevant for DatetimeIndex:"
msgstr ""

#: mars.dataframe.Series.dt.ceil:10 of
msgid "'infer' will attempt to infer fall dst-transition hours based on order"
msgstr ""

#: mars.dataframe.Series.dt.ceil:12 of
msgid ""
"bool-ndarray where True signifies a DST time, False designates a non-DST "
"time (note that this flag is only applicable for ambiguous times)"
msgstr ""

#: mars.dataframe.Series.dt.ceil:15 of
msgid "'NaT' will return NaT where there are ambiguous times"
msgstr ""

#: mars.dataframe.Series.dt.ceil:16 of
msgid "'raise' will raise an AmbiguousTimeError if there are ambiguous times."
msgstr ""

#: mars.dataframe.Series.dt.ceil:21 of
msgid ""
"A nonexistent time does not exist in a particular timezone where clocks "
"moved forward due to DST.  - 'shift_forward' will shift the nonexistent "
"time forward to the   closest existing time - 'shift_backward' will shift"
" the nonexistent time backward to the   closest existing time - 'NaT' "
"will return NaT where there are nonexistent times - timedelta objects "
"will shift nonexistent times by the timedelta - 'raise' will raise an "
"NonExistentTimeError if there are   nonexistent times.  .. versionadded::"
" 0.24.0"
msgstr ""

#: mars.dataframe.Series.dt.ceil:21 of
msgid ""
"A nonexistent time does not exist in a particular timezone where clocks "
"moved forward due to DST."
msgstr ""

#: mars.dataframe.Series.dt.ceil:24 of
msgid ""
"'shift_forward' will shift the nonexistent time forward to the closest "
"existing time"
msgstr ""

#: mars.dataframe.Series.dt.ceil:26 of
msgid ""
"'shift_backward' will shift the nonexistent time backward to the closest "
"existing time"
msgstr ""

#: mars.dataframe.Series.dt.ceil:28 of
msgid "'NaT' will return NaT where there are nonexistent times"
msgstr ""

#: mars.dataframe.Series.dt.ceil:29 of
msgid "timedelta objects will shift nonexistent times by the timedelta"
msgstr ""

#: mars.dataframe.Series.dt.ceil:30 of
msgid "'raise' will raise an NonExistentTimeError if there are nonexistent times."
msgstr ""

#: mars.dataframe.Series.dt.ceil of
msgid "Returns"
msgstr ""

#: mars.dataframe.Series.dt.ceil:36 of
msgid ""
"Index of the same type for a DatetimeIndex or TimedeltaIndex, or a Series"
" with the same index for a Series."
msgstr ""

#: mars.dataframe.Series.dt.ceil of
msgid "Return type"
msgstr ""

#: mars.dataframe.Series.dt.ceil of
msgid "Raises"
msgstr ""

#: mars.dataframe.Series.dt.ceil:43 of
msgid "Examples"
msgstr ""

#: mars.dataframe.Series.dt.ceil:44 of
msgid "**DatetimeIndex**"
msgstr ""

#: mars.dataframe.Series.dt.ceil:57 of
msgid "**Series**"
msgstr ""

