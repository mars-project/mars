# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1999-2020, The Alibaba Group Holding Ltd.
# This file is distributed under the same license as the mars package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mars 0.4.0rc1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-04-22 19:58+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../source/dataframe/reference/api/mars.dataframe.Series.dt.tz_localize.rst:2
msgid "mars.dataframe.Series.dt.tz\\_localize"
msgstr ""

#: mars.dataframe.Series.dt.tz_localize:1 of
msgid "Localize tz-naive Datetime Array/Index to tz-aware Datetime Array/Index."
msgstr ""

#: mars.dataframe.Series.dt.tz_localize:4 of
msgid ""
"This method takes a time zone (tz) naive Datetime Array/Index object and "
"makes this time zone aware. It does not move the time to another time "
"zone. Time zone localization helps to switch from time zone aware to time"
" zone unaware objects."
msgstr ""

#: mars.dataframe.Series.dt.tz_localize of
msgid "Parameters"
msgstr ""

#: mars.dataframe.Series.dt.tz_localize:10 of
msgid ""
"Time zone to convert timestamps to. Passing ``None`` will remove the time"
" zone information preserving local time."
msgstr ""

#: mars.dataframe.Series.dt.tz_localize:13 of
msgid ""
"When clocks moved backward due to DST, ambiguous times may arise. For "
"example in Central European Time (UTC+01), when going from 03:00 DST to "
"02:00 non-DST, 02:30:00 local time occurs both at 00:30:00 UTC and at "
"01:30:00 UTC. In such a situation, the `ambiguous` parameter dictates how"
" ambiguous times should be handled.  - 'infer' will attempt to infer fall"
" dst-transition hours based on   order - bool-ndarray where True "
"signifies a DST time, False signifies a   non-DST time (note that this "
"flag is only applicable for   ambiguous times) - 'NaT' will return NaT "
"where there are ambiguous times - 'raise' will raise an "
"AmbiguousTimeError if there are ambiguous   times."
msgstr ""

#: mars.dataframe.Series.dt.tz_localize:13 of
msgid ""
"When clocks moved backward due to DST, ambiguous times may arise. For "
"example in Central European Time (UTC+01), when going from 03:00 DST to "
"02:00 non-DST, 02:30:00 local time occurs both at 00:30:00 UTC and at "
"01:30:00 UTC. In such a situation, the `ambiguous` parameter dictates how"
" ambiguous times should be handled."
msgstr ""

#: mars.dataframe.Series.dt.tz_localize:20 of
msgid "'infer' will attempt to infer fall dst-transition hours based on order"
msgstr ""

#: mars.dataframe.Series.dt.tz_localize:22 of
msgid ""
"bool-ndarray where True signifies a DST time, False signifies a non-DST "
"time (note that this flag is only applicable for ambiguous times)"
msgstr ""

#: mars.dataframe.Series.dt.tz_localize:25 of
msgid "'NaT' will return NaT where there are ambiguous times"
msgstr ""

#: mars.dataframe.Series.dt.tz_localize:26 of
msgid "'raise' will raise an AmbiguousTimeError if there are ambiguous times."
msgstr ""

#: mars.dataframe.Series.dt.tz_localize:29 of
msgid ""
"A nonexistent time does not exist in a particular timezone where clocks "
"moved forward due to DST.  - 'shift_forward' will shift the nonexistent "
"time forward to the   closest existing time - 'shift_backward' will shift"
" the nonexistent time backward to the   closest existing time - 'NaT' "
"will return NaT where there are nonexistent times - timedelta objects "
"will shift nonexistent times by the timedelta - 'raise' will raise an "
"NonExistentTimeError if there are   nonexistent times.  .. versionadded::"
" 0.24.0"
msgstr ""

#: mars.dataframe.Series.dt.tz_localize:29 of
msgid ""
"A nonexistent time does not exist in a particular timezone where clocks "
"moved forward due to DST."
msgstr ""

#: mars.dataframe.Series.dt.tz_localize:32 of
msgid ""
"'shift_forward' will shift the nonexistent time forward to the closest "
"existing time"
msgstr ""

#: mars.dataframe.Series.dt.tz_localize:34 of
msgid ""
"'shift_backward' will shift the nonexistent time backward to the closest "
"existing time"
msgstr ""

#: mars.dataframe.Series.dt.tz_localize:36 of
msgid "'NaT' will return NaT where there are nonexistent times"
msgstr ""

#: mars.dataframe.Series.dt.tz_localize:37 of
msgid "timedelta objects will shift nonexistent times by the timedelta"
msgstr ""

#: mars.dataframe.Series.dt.tz_localize:38 of
msgid "'raise' will raise an NonExistentTimeError if there are nonexistent times."
msgstr ""

#: mars.dataframe.Series.dt.tz_localize of
msgid "Returns"
msgstr ""

#: mars.dataframe.Series.dt.tz_localize:44 of
msgid "Array/Index converted to the specified time zone."
msgstr ""

#: mars.dataframe.Series.dt.tz_localize of
msgid "Return type"
msgstr ""

#: mars.dataframe.Series.dt.tz_localize of
msgid "Raises"
msgstr ""

#: mars.dataframe.Series.dt.tz_localize:47 of
msgid "If the Datetime Array/Index is tz-aware and tz is not None."
msgstr ""

#: mars.dataframe.Series.dt.tz_localize:51 of
msgid ":meth:`DatetimeIndex.tz_convert`"
msgstr ""

#: mars.dataframe.Series.dt.tz_localize:52 of
msgid "Convert tz-aware DatetimeIndex from one time zone to another."
msgstr ""

#: mars.dataframe.Series.dt.tz_localize:55 of
msgid "Examples"
msgstr ""

#: mars.dataframe.Series.dt.tz_localize:64 of
msgid "Localize DatetimeIndex in US/Eastern time zone:"
msgstr ""

#: mars.dataframe.Series.dt.tz_localize:73 of
msgid ""
"With the ``tz=None``, we can remove the time zone information while "
"keeping the local time (not converted to UTC):"
msgstr ""

#: mars.dataframe.Series.dt.tz_localize:81 of
msgid ""
"Be careful with DST changes. When there is sequential data, pandas can "
"infer the DST time:"
msgstr ""

#: mars.dataframe.Series.dt.tz_localize:101 of
msgid ""
"In some cases, inferring the DST is impossible. In such cases, you can "
"pass an ndarray to the ambiguous parameter to set the DST explicitly"
msgstr ""

#: mars.dataframe.Series.dt.tz_localize:112 of
msgid ""
"If the DST transition causes nonexistent times, you can shift these dates"
" forward or backwards with a timedelta object or `'shift_forward'` or "
"`'shift_backwards'`."
msgstr ""

