# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1999-2020, The Alibaba Group Holding Ltd.
# This file is distributed under the same license as the mars package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mars 0.4.0rc1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-04-22 19:58+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../source/dataframe/reference/api/mars.dataframe.Series.str.rpartition.rst:2
msgid "mars.dataframe.Series.str.rpartition"
msgstr ""

#: mars.dataframe.Series.str.rpartition:1 of
msgid "Split the string at the last occurrence of `sep`."
msgstr ""

#: mars.dataframe.Series.str.rpartition:3 of
msgid ""
"This method splits the string at the last occurrence of `sep`, and "
"returns 3 elements containing the part before the separator, the "
"separator itself, and the part after the separator. If the separator is "
"not found, return 3 elements containing two empty strings, followed by "
"the string itself."
msgstr ""

#: mars.dataframe.Series.str.rpartition of
msgid "Parameters"
msgstr ""

#: mars.dataframe.Series.str.rpartition:8 of
msgid "String to split on."
msgstr ""

#: mars.dataframe.Series.str.rpartition:10 of
msgid ""
"If True, return DataFrame/MultiIndex expanding dimensionality. If False, "
"return Series/Index."
msgstr ""

#: mars.dataframe.Series.str.rpartition of
msgid "Returns"
msgstr ""

#: mars.dataframe.Series.str.rpartition of
msgid "Return type"
msgstr ""

#: mars.dataframe.Series.str.rpartition:20 of
msgid ":meth:`partition`"
msgstr ""

#: mars.dataframe.Series.str.rpartition:20 of
msgid "Split the string at the first occurrence of `sep`."
msgstr ""

#: mars.dataframe.Series.str.rpartition:23 of
msgid ":meth:`Series.str.split`"
msgstr ""

#: mars.dataframe.Series.str.rpartition:23 of
msgid "Split strings around given separators."
msgstr ""

#: mars.dataframe.Series.str.rpartition:25 of
msgid ":meth:`str.partition`"
msgstr ""

#: mars.dataframe.Series.str.rpartition:26 of
msgid "Standard library version."
msgstr ""

#: mars.dataframe.Series.str.rpartition:29 of
msgid "Examples"
msgstr ""

#: mars.dataframe.Series.str.rpartition:42 of
msgid "To partition by the last space instead of the first one:"
msgstr ""

#: mars.dataframe.Series.str.rpartition:49 of
msgid "To partition by something different than a space:"
msgstr ""

#: mars.dataframe.Series.str.rpartition:56 of
msgid "To return a Series containing tuples instead of a DataFrame:"
msgstr ""

#: mars.dataframe.Series.str.rpartition:63 of
msgid "Also available on indices:"
msgstr ""

#: mars.dataframe.Series.str.rpartition:69 of
msgid "Which will create a MultiIndex:"
msgstr ""

#: mars.dataframe.Series.str.rpartition:76 of
msgid "Or an index with tuples with ``expand=False``:"
msgstr ""

