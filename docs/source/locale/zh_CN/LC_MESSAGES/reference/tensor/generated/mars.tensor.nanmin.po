# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1999-2020, The Alibaba Group Holding Ltd.
# This file is distributed under the same license as the mars package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mars 0.5.0a2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-06-16 16:57+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../source/reference/tensor/generated/mars.tensor.nanmin.rst:2
msgid "mars.tensor.nanmin"
msgstr ""

#: mars.tensor.nanmin:1 of
msgid ""
"Return minimum of a tensor or minimum along an axis, ignoring any NaNs. "
"When all-NaN slices are encountered a ``RuntimeWarning`` is raised and "
"Nan is returned for that slice."
msgstr ""

#: mars.tensor.nanmin of
msgid "Parameters"
msgstr ""

#: mars.tensor.nanmin:5 of
msgid ""
"Tensor containing numbers whose minimum is desired. If `a` is not an "
"tensor, a conversion is attempted."
msgstr ""

#: mars.tensor.nanmin:8 of
msgid ""
"Axis along which the minimum is computed. The default is to compute the "
"minimum of the flattened tensor."
msgstr ""

#: mars.tensor.nanmin:11 of
msgid ""
"Alternate output tensor in which to place the result.  The default is "
"``None``; if provided, it must have the same shape as the expected "
"output, but the type will be cast if necessary.  See `doc.ufuncs` for "
"details."
msgstr ""

#: mars.tensor.nanmin:16 of
msgid ""
"If this is set to True, the axes which are reduced are left in the result"
" as dimensions with size one. With this option, the result will broadcast"
" correctly against the original `a`.  If the value is anything but the "
"default, then `keepdims` will be passed through to the `min` method of "
"sub-classes of `Tensor`.  If the sub-classes methods does not implement "
"`keepdims` any exceptions will be raised."
msgstr ""

#: mars.tensor.nanmin:16 of
msgid ""
"If this is set to True, the axes which are reduced are left in the result"
" as dimensions with size one. With this option, the result will broadcast"
" correctly against the original `a`."
msgstr ""

#: mars.tensor.nanmin:20 of
msgid ""
"If the value is anything but the default, then `keepdims` will be passed "
"through to the `min` method of sub-classes of `Tensor`.  If the sub-"
"classes methods does not implement `keepdims` any exceptions will be "
"raised."
msgstr ""

#: mars.tensor.nanmin:25 of
msgid "The number of chunks to combine."
msgstr ""

#: mars.tensor.nanmin of
msgid "Returns"
msgstr ""

#: mars.tensor.nanmin:28 of
msgid ""
"**nanmin** -- An tensor with the same shape as `a`, with the specified "
"axis removed.  If `a` is a 0-d tensor, or if axis is None, a tensor "
"scalar is returned.  The same dtype as `a` is returned."
msgstr ""

#: mars.tensor.nanmin of
msgid "Return type"
msgstr ""

#: mars.tensor.nanmin:36 of
msgid ":func:`nanmax`"
msgstr ""

#: mars.tensor.nanmin:36 of
msgid "The maximum value of an array along a given axis, ignoring any NaNs."
msgstr ""

#: mars.tensor.nanmin:39 of
msgid ":func:`amin`"
msgstr ""

#: mars.tensor.nanmin:39 of
msgid "The minimum value of an array along a given axis, propagating any NaNs."
msgstr ""

#: mars.tensor.nanmin:42 of
msgid ":func:`fmin`"
msgstr ""

#: mars.tensor.nanmin:42 of
msgid "Element-wise minimum of two arrays, ignoring any NaNs."
msgstr ""

#: mars.tensor.nanmin:45 of
msgid ":func:`minimum`"
msgstr ""

#: mars.tensor.nanmin:45 of
msgid "Element-wise minimum of two arrays, propagating any NaNs."
msgstr ""

#: mars.tensor.nanmin:48 of
msgid ":func:`isnan`"
msgstr ""

#: mars.tensor.nanmin:48 of
msgid "Shows which elements are Not a Number (NaN)."
msgstr ""

#: mars.tensor.nanmin:51 of
msgid ":func:`isfinite`"
msgstr ""

#: mars.tensor.nanmin:51 of
msgid "Shows which elements are neither NaN nor infinity."
msgstr ""

#: mars.tensor.nanmin:53 of
msgid ":func:`amax`, :func:`fmax`, :func:`maximum`"
msgstr ""

#: mars.tensor.nanmin:56 of
msgid "Notes"
msgstr ""

#: mars.tensor.nanmin:57 of
msgid ""
"Mars uses the IEEE Standard for Binary Floating-Point for Arithmetic "
"(IEEE 754). This means that Not a Number is not equivalent to infinity. "
"Positive infinity is treated as a very large number and negative infinity"
" is treated as a very small (i.e. negative) number."
msgstr ""

#: mars.tensor.nanmin:62 of
msgid "If the input has a integer type the function is equivalent to mt.min."
msgstr ""

#: mars.tensor.nanmin:65 of
msgid "Examples"
msgstr ""

#: mars.tensor.nanmin:76 of
msgid "When positive infinity and negative infinity are present:"
msgstr ""

