# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1999-2020, The Alibaba Group Holding Ltd.
# This file is distributed under the same license as the mars package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mars 0.5.0a2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-06-16 16:57+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../source/reference/dataframe/api/mars.dataframe.Series.str.join.rst:2
msgid "mars.dataframe.Series.str.join"
msgstr ""

#: mars.dataframe.Series.str.join:1 of
msgid ""
"Join lists contained as elements in the Series/Index with passed "
"delimiter."
msgstr ""

#: mars.dataframe.Series.str.join:3 of
msgid ""
"If the elements of a Series are lists themselves, join the content of "
"these lists using the delimiter passed to the function. This function is "
"an equivalent to :meth:`str.join`."
msgstr ""

#: mars.dataframe.Series.str.join of
msgid "Parameters"
msgstr ""

#: mars.dataframe.Series.str.join:7 of
msgid "Delimiter to use between list entries."
msgstr ""

#: mars.dataframe.Series.str.join of
msgid "Returns"
msgstr ""

#: mars.dataframe.Series.str.join:10 of
msgid ""
"**Series/Index** -- The list entries concatenated by intervening "
"occurrences of the delimiter."
msgstr ""

#: mars.dataframe.Series.str.join of
msgid "Return type"
msgstr ""

#: mars.dataframe.Series.str.join of
msgid "Raises"
msgstr ""

#: mars.dataframe.Series.str.join:14 of
msgid "If the supplied Series contains neither strings nor lists."
msgstr ""

#: mars.dataframe.Series.str.join:19 of
msgid ":meth:`str.join`"
msgstr ""

#: mars.dataframe.Series.str.join:19 of
msgid "Standard library version of this method."
msgstr ""

#: mars.dataframe.Series.str.join:21 of
msgid ":meth:`Series.str.split`"
msgstr ""

#: mars.dataframe.Series.str.join:22 of
msgid "Split strings around given separator/delimiter."
msgstr ""

#: mars.dataframe.Series.str.join:25 of
msgid "Notes"
msgstr ""

#: mars.dataframe.Series.str.join:26 of
msgid ""
"If any of the list items is not a string object, the result of the join "
"will be `NaN`."
msgstr ""

#: mars.dataframe.Series.str.join:30 of
msgid "Examples"
msgstr ""

#: mars.dataframe.Series.str.join:31 of
msgid "Example with a list that contains non-string elements."
msgstr ""

#: mars.dataframe.Series.str.join:48 of
msgid ""
"Join all lists using a '-'. The lists containing object(s) of types other"
" than str will produce a NaN."
msgstr ""

