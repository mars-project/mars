# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1999-2020, The Alibaba Group Holding Ltd.
# This file is distributed under the same license as the mars package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mars 0.5.0a2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-06-16 16:57+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../source/reference/dataframe/api/mars.dataframe.Series.str.split.rst:2
msgid "mars.dataframe.Series.str.split"
msgstr ""

#: mars.dataframe.Series.str.split:1 mars.dataframe.Series.str.split:24 of
msgid "Split strings around given separator/delimiter."
msgstr ""

#: mars.dataframe.Series.str.split:3 of
msgid ""
"Splits the string in the Series/Index from the beginning, at the "
"specified delimiter string. Equivalent to :meth:`str.split`."
msgstr ""

#: mars.dataframe.Series.str.split of
msgid "Parameters"
msgstr ""

#: mars.dataframe.Series.str.split:6 of
msgid ""
"String or regular expression to split on. If not specified, split on "
"whitespace."
msgstr ""

#: mars.dataframe.Series.str.split:9 of
msgid ""
"Limit number of splits in output. ``None``, 0 and -1 will be interpreted "
"as return all splits."
msgstr ""

#: mars.dataframe.Series.str.split:12 of
msgid ""
"Expand the splitted strings into separate columns.  * If ``True``, return"
" DataFrame/MultiIndex expanding dimensionality. * If ``False``, return "
"Series/Index, containing lists of strings."
msgstr ""

#: mars.dataframe.Series.str.split:12 of
msgid "Expand the splitted strings into separate columns."
msgstr ""

#: mars.dataframe.Series.str.split:14 of
msgid "If ``True``, return DataFrame/MultiIndex expanding dimensionality."
msgstr ""

#: mars.dataframe.Series.str.split:15 of
msgid "If ``False``, return Series/Index, containing lists of strings."
msgstr ""

#: mars.dataframe.Series.str.split of
msgid "Returns"
msgstr ""

#: mars.dataframe.Series.str.split:18 of
msgid "Type matches caller unless ``expand=True`` (see Notes)."
msgstr ""

#: mars.dataframe.Series.str.split of
msgid "Return type"
msgstr ""

#: mars.dataframe.Series.str.split:24 of
msgid ":meth:`Series.str.split`"
msgstr ""

#: mars.dataframe.Series.str.split:27 of
msgid ":meth:`Series.str.rsplit`"
msgstr ""

#: mars.dataframe.Series.str.split:27 of
msgid "Splits string around given separator/delimiter, starting from the right."
msgstr ""

#: mars.dataframe.Series.str.split:30 of
msgid ":meth:`Series.str.join`"
msgstr ""

#: mars.dataframe.Series.str.split:30 of
msgid ""
"Join lists contained as elements in the Series/Index with passed "
"delimiter."
msgstr ""

#: mars.dataframe.Series.str.split:33 of
msgid ":meth:`str.split`"
msgstr ""

#: mars.dataframe.Series.str.split:33 of
msgid "Standard library version for split."
msgstr ""

#: mars.dataframe.Series.str.split:35 of
msgid ":meth:`str.rsplit`"
msgstr ""

#: mars.dataframe.Series.str.split:36 of
msgid "Standard library version for rsplit."
msgstr ""

#: mars.dataframe.Series.str.split:39 of
msgid "Notes"
msgstr ""

#: mars.dataframe.Series.str.split:40 of
msgid "The handling of the `n` keyword depends on the number of found splits:"
msgstr ""

#: mars.dataframe.Series.str.split:42 of
msgid "If found splits > `n`,  make first `n` splits only"
msgstr ""

#: mars.dataframe.Series.str.split:43 of
msgid "If found splits <= `n`, make all splits"
msgstr ""

#: mars.dataframe.Series.str.split:44 of
msgid ""
"If for a certain row the number of found splits < `n`, append `None` for "
"padding up to `n` if ``expand=True``"
msgstr ""

#: mars.dataframe.Series.str.split:47 of
msgid ""
"If using ``expand=True``, Series and Index callers return DataFrame and "
"MultiIndex objects, respectively."
msgstr ""

#: mars.dataframe.Series.str.split:51 of
msgid "Examples"
msgstr ""

#: mars.dataframe.Series.str.split:63 of
msgid "In the default setting, the string is split by whitespace."
msgstr ""

#: mars.dataframe.Series.str.split:71 of
msgid ""
"Without the `n` parameter, the outputs of `rsplit` and `split` are "
"identical."
msgstr ""

#: mars.dataframe.Series.str.split:80 of
msgid ""
"The `n` parameter can be used to limit the number of splits on the "
"delimiter. The outputs of `split` and `rsplit` are different."
msgstr ""

#: mars.dataframe.Series.str.split:95 of
msgid "The `pat` parameter can be used to split by other characters."
msgstr ""

#: mars.dataframe.Series.str.split:103 of
msgid ""
"When using ``expand=True``, the split elements will expand out into "
"separate columns. If NaN is present, it is propagated throughout the "
"columns during the split."
msgstr ""

#: mars.dataframe.Series.str.split:117 of
msgid ""
"For slightly more complex use cases like splitting the html document name"
" from a url, a combination of parameter settings can be used."
msgstr ""

#: mars.dataframe.Series.str.split:126 of
msgid ""
"Remember to escape special characters when explicitly using regular "
"expressions."
msgstr ""

