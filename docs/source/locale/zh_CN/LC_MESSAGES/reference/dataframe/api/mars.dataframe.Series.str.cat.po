# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1999-2020, The Alibaba Group Holding Ltd.
# This file is distributed under the same license as the mars package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mars 0.5.0a2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-06-16 16:57+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../source/reference/dataframe/api/mars.dataframe.Series.str.cat.rst:2
msgid "mars.dataframe.Series.str.cat"
msgstr ""

#: mars.dataframe.Series.str.cat:1 of
msgid "Concatenate strings in the Series/Index with given separator."
msgstr ""

#: mars.dataframe.Series.str.cat:3 of
msgid ""
"If `others` is specified, this function concatenates the Series/Index and"
" elements of `others` element-wise. If `others` is not passed, then all "
"values in the Series/Index are concatenated into a single string with a "
"given `sep`."
msgstr ""

#: mars.dataframe.Series.str.cat of
msgid "Parameters"
msgstr ""

#: mars.dataframe.Series.str.cat:8 of
msgid ""
"Series, Index, DataFrame, np.ndarray (one- or two-dimensional) and other "
"list-likes of strings must have the same length as the calling "
"Series/Index, with the exception of indexed objects (i.e. "
"Series/Index/DataFrame) if `join` is not None.  If others is a list-like "
"that contains a combination of Series, Index or np.ndarray (1-dim), then "
"all elements will be unpacked and must satisfy the above criteria "
"individually.  If others is None, the method returns the concatenation of"
" all strings in the calling Series/Index."
msgstr ""

#: mars.dataframe.Series.str.cat:8 of
msgid ""
"Series, Index, DataFrame, np.ndarray (one- or two-dimensional) and other "
"list-likes of strings must have the same length as the calling "
"Series/Index, with the exception of indexed objects (i.e. "
"Series/Index/DataFrame) if `join` is not None."
msgstr ""

#: mars.dataframe.Series.str.cat:13 of
msgid ""
"If others is a list-like that contains a combination of Series, Index or "
"np.ndarray (1-dim), then all elements will be unpacked and must satisfy "
"the above criteria individually."
msgstr ""

#: mars.dataframe.Series.str.cat:17 of
msgid ""
"If others is None, the method returns the concatenation of all strings in"
" the calling Series/Index."
msgstr ""

#: mars.dataframe.Series.str.cat:20 of
msgid ""
"The separator between the different elements/columns. By default the "
"empty string `''` is used."
msgstr ""

#: mars.dataframe.Series.str.cat:23 of
msgid ""
"Representation that is inserted for all missing values:  - If `na_rep` is"
" None, and `others` is None, missing values in the   Series/Index are "
"omitted from the result. - If `na_rep` is None, and `others` is not None,"
" a row containing a   missing value in any of the columns (before "
"concatenation) will   have a missing value in the result."
msgstr ""

#: mars.dataframe.Series.str.cat:23 of
msgid "Representation that is inserted for all missing values:"
msgstr ""

#: mars.dataframe.Series.str.cat:25 of
msgid ""
"If `na_rep` is None, and `others` is None, missing values in the "
"Series/Index are omitted from the result."
msgstr ""

#: mars.dataframe.Series.str.cat:27 of
msgid ""
"If `na_rep` is None, and `others` is not None, a row containing a missing"
" value in any of the columns (before concatenation) will have a missing "
"value in the result."
msgstr ""

#: mars.dataframe.Series.str.cat:31 of
msgid ""
"Determines the join-style between the calling Series/Index and any "
"Series/Index/DataFrame in `others` (objects without an index need to "
"match the length of the calling Series/Index). To disable alignment, use "
"`.values` on any Series/Index/DataFrame in `others`.  .. versionadded:: "
"0.23.0 .. versionchanged:: 1.0.0     Changed default of `join` from None "
"to `'left'`."
msgstr ""

#: mars.dataframe.Series.str.cat:31 of
msgid ""
"Determines the join-style between the calling Series/Index and any "
"Series/Index/DataFrame in `others` (objects without an index need to "
"match the length of the calling Series/Index). To disable alignment, use "
"`.values` on any Series/Index/DataFrame in `others`."
msgstr ""

#: mars.dataframe.Series.str.cat:37 of
msgid "Changed default of `join` from None to `'left'`."
msgstr ""

#: mars.dataframe.Series.str.cat of
msgid "Returns"
msgstr ""

#: mars.dataframe.Series.str.cat:41 of
msgid ""
"If `others` is None, `str` is returned, otherwise a `Series/Index` (same "
"type as caller) of objects is returned."
msgstr ""

#: mars.dataframe.Series.str.cat of
msgid "Return type"
msgstr ""

#: mars.dataframe.Series.str.cat:48 of
msgid ":meth:`split`"
msgstr ""

#: mars.dataframe.Series.str.cat:48 of
msgid "Split each string in the Series/Index."
msgstr ""

#: mars.dataframe.Series.str.cat:50 of
msgid ":meth:`join`"
msgstr ""

#: mars.dataframe.Series.str.cat:51 of
msgid "Join lists contained as elements in the Series/Index."
msgstr ""

#: mars.dataframe.Series.str.cat:54 of
msgid "Examples"
msgstr ""

#: mars.dataframe.Series.str.cat:55 of
msgid ""
"When not passing `others`, all values are concatenated into a single "
"string:"
msgstr ""

#: mars.dataframe.Series.str.cat:64 of
msgid ""
"By default, NA values in the Series are ignored. Using `na_rep`, they can"
" be given a representation:"
msgstr ""

#: mars.dataframe.Series.str.cat:70 of
msgid ""
"If `others` is specified, corresponding values are concatenated with the "
"separator. Result will be a Series of strings."
msgstr ""

#: mars.dataframe.Series.str.cat:80 of
msgid ""
"Missing values will remain missing in the result, but can again be "
"represented using `na_rep`"
msgstr ""

#: mars.dataframe.Series.str.cat:90 of
msgid "If `sep` is not specified, the values are concatenated without separation."
msgstr ""

#: mars.dataframe.Series.str.cat:100 of
msgid ""
"Series with different indexes can be aligned before concatenation. The "
"`join`-keyword works as in other methods."
msgstr ""

#: mars.dataframe.Series.str.cat:132 of
msgid "For more examples, see :ref:`here <text.concatenate>`."
msgstr ""

