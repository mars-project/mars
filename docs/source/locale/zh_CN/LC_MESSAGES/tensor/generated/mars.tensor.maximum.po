# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1999-2020, The Alibaba Group Holding Ltd.
# This file is distributed under the same license as the mars package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mars \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-05-04 10:39+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.3\n"

#: ../../source/tensor/generated/mars.tensor.maximum.rst:2
msgid "mars.tensor.maximum"
msgstr ""

#: mars.tensor.maximum:1 of
msgid "Element-wise maximum of tensor elements."
msgstr ""

#: mars.tensor.maximum:3 of
msgid ""
"Compare two tensors and returns a new array containing the element-wise "
"maxima. If one of the elements being compared is a NaN, then that element"
" is returned. If both elements are NaNs then the first is returned. The "
"latter distinction is important for complex NaNs, which are defined as at"
" least one of the real or imaginary parts being a NaN. The net effect is "
"that NaNs are propagated."
msgstr ""

#: mars.tensor.maximum:13 of
msgid "x1, x2"
msgstr ""

#: mars.tensor.maximum:12 of
msgid "array_like"
msgstr ""

#: mars.tensor.maximum:13 of
msgid ""
"The tensors holding the elements to be compared. They must have the same "
"shape, or shapes that can be broadcast to a single shape."
msgstr ""

#: mars.tensor.maximum:18 of
msgid "out"
msgstr ""

#: mars.tensor.maximum:17 of
msgid "Tensor, None, or tuple of Tensor and None, optional"
msgstr ""

#: mars.tensor.maximum:16 of
msgid ""
"A location into which the result is stored. If provided, it must have a "
"shape that the inputs broadcast to. If not provided or `None`, a freshly-"
"allocated tensor is returned. A tuple (possible only as a keyword "
"argument) must have length equal to the number of outputs."
msgstr ""

#: mars.tensor.maximum:21 of
msgid "where"
msgstr ""

#: mars.tensor.maximum:20 of
msgid "array_like, optional"
msgstr ""

#: mars.tensor.maximum:21 of
msgid ""
"Values of True indicate to calculate the ufunc at that position, values "
"of False indicate to leave the value in the output alone."
msgstr ""

#: mars.tensor.maximum:23 of
msgid "**kwargs"
msgstr ""

#: mars.tensor.maximum:29 of
msgid "y"
msgstr ""

#: mars.tensor.maximum:28 of
msgid "ndarray or scalar"
msgstr ""

#: mars.tensor.maximum:28 of
msgid ""
"The maximum of `x1` and `x2`, element-wise.  Returns scalar if both  `x1`"
" and `x2` are scalars."
msgstr ""

#: mars.tensor.maximum:33 of
msgid "minimum :"
msgstr ""

#: mars.tensor.maximum:34 of
msgid "Element-wise minimum of two tensors, propagates NaNs."
msgstr ""

#: mars.tensor.maximum:35 of
msgid "fmax :"
msgstr ""

#: mars.tensor.maximum:36 of
msgid "Element-wise maximum of two tensors, ignores NaNs."
msgstr ""

#: mars.tensor.maximum:37 of
msgid "amax :"
msgstr ""

#: mars.tensor.maximum:38 of
msgid "The maximum value of a tensor along a given axis, propagates NaNs."
msgstr ""

#: mars.tensor.maximum:40 of
msgid "nanmax :"
msgstr ""

#: mars.tensor.maximum:40 of
msgid "The maximum value of a tensor along a given axis, ignores NaNs."
msgstr ""

#: mars.tensor.maximum:42 of
msgid "fmin, amin, nanmin"
msgstr ""

#: mars.tensor.maximum:46 of
msgid ""
"The maximum is equivalent to ``mt.where(x1 >= x2, x1, x2)`` when neither "
"x1 nor x2 are nans, but it is faster and does proper broadcasting."
msgstr ""

