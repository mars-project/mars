# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2018, The Alibaba Group Holding Ltd.
# This file is distributed under the same license as the mars package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mars \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-12 12:16+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.3\n"

#: ../../source/tensor/generated/mars.tensor.linalg.cholesky.rst:2
msgid "mars.tensor.linalg.cholesky"
msgstr ""

#~ msgid "Cholesky decomposition."
#~ msgstr ""

#~ msgid ""
#~ "Return the Cholesky decomposition, `L *"
#~ " L.H`, of the square matrix `a`, "
#~ "where `L` is lower-triangular and "
#~ ".H is the conjugate transpose operator"
#~ " (which is the ordinary transpose if"
#~ " `a` is real-valued).  `a` must "
#~ "be Hermitian (symmetric if real-valued)"
#~ " and positive-definite.  Only `L` is"
#~ " actually returned."
#~ msgstr ""

#~ msgid "a"
#~ msgstr ""

#~ msgid "(..., M, M) array_like"
#~ msgstr ""

#~ msgid ""
#~ "Hermitian (symmetric if all elements are"
#~ " real), positive-definite input matrix."
#~ msgstr ""

#~ msgid "lower"
#~ msgstr ""

#~ msgid "bool"
#~ msgstr ""

#~ msgid ""
#~ "Whether to compute the upper or "
#~ "lower triangular Cholesky factorization.  "
#~ "Default is upper-triangular."
#~ msgstr ""

#~ msgid "L"
#~ msgstr ""

#~ msgid "Upper or lower-triangular Cholesky factor of `a`."
#~ msgstr ""

#~ msgid "LinAlgError"
#~ msgstr ""

#~ msgid ""
#~ "If the decomposition fails, for example,"
#~ " if `a` is not positive-definite."
#~ msgstr ""

#~ msgid ""
#~ "Broadcasting rules apply, see the "
#~ "`mt.linalg` documentation for details."
#~ msgstr ""

#~ msgid "The Cholesky decomposition is often used as a fast way of solving"
#~ msgstr ""

#~ msgid "A \\mathbf{x} = \\mathbf{b}"
#~ msgstr ""

#~ msgid "(when `A` is both Hermitian/symmetric and positive-definite)."
#~ msgstr ""

#~ msgid "First, we solve for :math:`\\mathbf{y}` in"
#~ msgstr ""

#~ msgid "L \\mathbf{y} = \\mathbf{b},"
#~ msgstr ""

#~ msgid "and then for :math:`\\mathbf{x}` in"
#~ msgstr ""

#~ msgid "L.H \\mathbf{x} = \\mathbf{y}."
#~ msgstr ""

