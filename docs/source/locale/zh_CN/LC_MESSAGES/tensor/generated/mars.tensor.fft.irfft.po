# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2018, The Alibaba Group Holding Ltd.
# This file is distributed under the same license as the mars package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mars \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-12 12:16+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.3\n"

#: ../../source/tensor/generated/mars.tensor.fft.irfft.rst:2
msgid "mars.tensor.fft.irfft"
msgstr ""

#~ msgid "Compute the inverse of the n-point DFT for real input."
#~ msgstr ""

#~ msgid ""
#~ "This function computes the inverse of"
#~ " the one-dimensional *n*-point discrete "
#~ "Fourier Transform of real input computed"
#~ " by `rfft`. In other words, "
#~ "``irfft(rfft(a), len(a)) == a`` to "
#~ "within numerical accuracy. (See Notes "
#~ "below for why ``len(a)`` is necessary"
#~ " here.)"
#~ msgstr ""

#~ msgid ""
#~ "The input is expected to be in "
#~ "the form returned by `rfft`, i.e. "
#~ "the real zero-frequency term followed"
#~ " by the complex positive frequency "
#~ "terms in order of increasing frequency."
#~ "  Since the discrete Fourier Transform "
#~ "of real input is Hermitian-symmetric,"
#~ " the negative frequency terms are "
#~ "taken to be the complex conjugates "
#~ "of the corresponding positive frequency "
#~ "terms."
#~ msgstr ""

#~ msgid "a"
#~ msgstr ""

#~ msgid "array_like"
#~ msgstr ""

#~ msgid "The input tensor."
#~ msgstr ""

#~ msgid "n"
#~ msgstr ""

#~ msgid "int, optional"
#~ msgstr ""

#~ msgid ""
#~ "Length of the transformed axis of "
#~ "the output. For `n` output points, "
#~ "``n//2+1`` input points are necessary.  "
#~ "If the input is longer than this,"
#~ " it is cropped.  If it is "
#~ "shorter than this, it is padded "
#~ "with zeros.  If `n` is not given,"
#~ " it is determined from the length "
#~ "of the input along the axis "
#~ "specified by `axis`."
#~ msgstr ""

#~ msgid "axis"
#~ msgstr ""

#~ msgid ""
#~ "Axis over which to compute the "
#~ "inverse FFT. If not given, the "
#~ "last axis is used."
#~ msgstr ""

#~ msgid "norm"
#~ msgstr ""

#~ msgid "{None, \"ortho\"}, optional"
#~ msgstr ""

#~ msgid "Normalization mode (see `mt.fft`). Default is None."
#~ msgstr ""

#~ msgid "out"
#~ msgstr ""

#~ msgid "Tensor"
#~ msgstr ""

#~ msgid ""
#~ "The truncated or zero-padded input, "
#~ "transformed along the axis indicated by"
#~ " `axis`, or the last one if "
#~ "`axis` is not specified. The length "
#~ "of the transformed axis is `n`, "
#~ "or, if `n` is not given, "
#~ "``2*(m-1)`` where ``m`` is the length"
#~ " of the transformed axis of the "
#~ "input. To get an odd number of "
#~ "output points, `n` must be specified."
#~ msgstr ""

#~ msgid "IndexError"
#~ msgstr ""

#~ msgid "If `axis` is larger than the last axis of `a`."
#~ msgstr ""

#~ msgid ""
#~ "mt.fft : For definition of the DFT"
#~ " and conventions used. rfft : The "
#~ "one-dimensional FFT of real input, "
#~ "of which `irfft` is inverse. fft :"
#~ " The one-dimensional FFT. irfft2 :"
#~ " The inverse of the two-dimensional"
#~ " FFT of real input. irfftn : "
#~ "The inverse of the *n*-dimensional FFT"
#~ " of real input."
#~ msgstr ""

#~ msgid ""
#~ "Returns the real valued `n`-point "
#~ "inverse discrete Fourier transform of "
#~ "`a`, where `a` contains the non-"
#~ "negative frequency terms of a "
#~ "Hermitian-symmetric sequence. `n` is the"
#~ " length of the result, not the "
#~ "input."
#~ msgstr ""

#~ msgid ""
#~ "If you specify an `n` such that"
#~ " `a` must be zero-padded or "
#~ "truncated, the extra/removed values will "
#~ "be added/removed at high frequencies. "
#~ "One can thus resample a series to"
#~ " `m` points via Fourier interpolation "
#~ "by: ``a_resamp = irfft(rfft(a), m)``."
#~ msgstr ""

#~ msgid ""
#~ "Notice how the last term in the"
#~ " input to the ordinary `ifft` is "
#~ "the complex conjugate of the second "
#~ "term, and the output has zero "
#~ "imaginary part everywhere.  When calling "
#~ "`irfft`, the negative frequencies are "
#~ "not specified, and the output array "
#~ "is purely real."
#~ msgstr ""

