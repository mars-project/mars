# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1999-2020, The Alibaba Group Holding Ltd.
# This file is distributed under the same license as the mars package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mars 0.4.0rc1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-04-22 17:45+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../source/tensor/generated/mars.tensor.where.rst:2
msgid "mars.tensor.where"
msgstr ""

#: mars.tensor.where:1 of
msgid "Return elements, either from `x` or `y`, depending on `condition`."
msgstr ""

#: mars.tensor.where:3 of
msgid "If only `condition` is given, return ``condition.nonzero()``."
msgstr ""

#: mars.tensor.where of
msgid "Parameters"
msgstr ""

#: mars.tensor.where:5 of
msgid "When True, yield `x`, otherwise yield `y`."
msgstr ""

#: mars.tensor.where:7 of
msgid ""
"Values from which to choose. `x`, `y` and `condition` need to be "
"broadcastable to some shape."
msgstr ""

#: mars.tensor.where of
msgid "Returns"
msgstr ""

#: mars.tensor.where:11 of
msgid ""
"**out** -- If both `x` and `y` are specified, the output tensor contains "
"elements of `x` where `condition` is True, and elements from `y` "
"elsewhere.  If only `condition` is given, return the tuple "
"``condition.nonzero()``, the indices where `condition` is True."
msgstr ""

#: mars.tensor.where:11 of
msgid ""
"**out** -- If both `x` and `y` are specified, the output tensor contains "
"elements of `x` where `condition` is True, and elements from `y` "
"elsewhere."
msgstr ""

#: mars.tensor.where:15 of
msgid ""
"If only `condition` is given, return the tuple ``condition.nonzero()``, "
"the indices where `condition` is True."
msgstr ""

#: mars.tensor.where of
msgid "Return type"
msgstr ""

#: mars.tensor.where:19 of
msgid ":func:`nonzero`, :func:`choose`"
msgstr ""

#: mars.tensor.where:22 of
msgid "Notes"
msgstr ""

#: mars.tensor.where:23 of
msgid ""
"If `x` and `y` are given and input arrays are 1-D, `where` is equivalent "
"to::"
msgstr ""

#: mars.tensor.where:29 of
msgid "Examples"
msgstr ""

#: mars.tensor.where:52 of
msgid "Find the indices of elements of `x` that are in `goodvalues`."
msgstr ""

