# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1999-2020, The Alibaba Group Holding Ltd.
# This file is distributed under the same license as the mars package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mars \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-05-04 11:23+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.3\n"

#: ../../source/tensor/generated/mars.tensor.meshgrid.rst:2
msgid "mars.tensor.meshgrid"
msgstr ""

#: mars.tensor.meshgrid:1 of
msgid "Return coordinate matrices from coordinate vectors."
msgstr ""

#: mars.tensor.meshgrid:3 of
msgid ""
"Make N-D coordinate arrays for vectorized evaluations of N-D "
"scalar/vector fields over N-D grids, given one-dimensional coordinate "
"tensors x1, x2,..., xn."
msgstr ""

#: mars.tensor.meshgrid:9 of
msgid "x1, x2,..., xn"
msgstr ""

#: mars.tensor.meshgrid:8 of
msgid "array_like"
msgstr ""

#: mars.tensor.meshgrid:10 of
msgid "1-D arrays representing the coordinates of a grid."
msgstr ""

#: mars.tensor.meshgrid:12 of
msgid "indexing"
msgstr ""

#: mars.tensor.meshgrid:11 of
msgid "{'xy', 'ij'}, optional"
msgstr ""

#: mars.tensor.meshgrid:12 of
msgid ""
"Cartesian ('xy', default) or matrix ('ij') indexing of output. See Notes "
"for more details."
msgstr ""

#: mars.tensor.meshgrid:16 of
msgid "sparse"
msgstr ""

#: mars.tensor.meshgrid:15 of
msgid "bool, optional"
msgstr ""

#: mars.tensor.meshgrid:15 of
msgid ""
"If True a sparse grid is returned in order to conserve memory. Default is"
" False."
msgstr ""

#: mars.tensor.meshgrid:25 of
msgid "X1, X2,..., XN"
msgstr ""

#: mars.tensor.meshgrid:24 of
msgid "Tensor"
msgstr ""

#: mars.tensor.meshgrid:21 of
msgid ""
"For vectors `x1`, `x2`,..., 'xn' with lengths ``Ni=len(xi)`` , return "
"``(N1, N2, N3,...Nn)`` shaped tensors if indexing='ij' or ``(N2, N1, "
"N3,...Nn)`` shaped tensors if indexing='xy' with the elements of `xi` "
"repeated to fill the matrix along the first dimension for `x1`, the "
"second for `x2` and so on."
msgstr ""

#: mars.tensor.meshgrid:29 of
msgid ""
"This function supports both indexing conventions through the indexing "
"keyword argument.  Giving the string 'ij' returns a meshgrid with matrix "
"indexing, while 'xy' returns a meshgrid with Cartesian indexing. In the "
"2-D case with inputs of length M and N, the outputs are of shape (N, M) "
"for 'xy' indexing and (M, N) for 'ij' indexing.  In the 3-D case with "
"inputs of length M, N and P, outputs are of shape (N, M, P) for 'xy' "
"indexing and (M, N, P) for 'ij' indexing.  The difference is illustrated "
"by the following code snippet::"
msgstr ""

#: mars.tensor.meshgrid:48 of
msgid "In the 1-D and 0-D case, the indexing and sparse keywords have no effect."
msgstr ""

#: mars.tensor.meshgrid:71 of
msgid "`meshgrid` is very useful to evaluate functions on a grid."
msgstr ""

