# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2018, The Alibaba Group Holding Ltd.
# This file is distributed under the same license as the mars package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mars \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-12 12:16+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.3\n"

#: ../../source/tensor/generated/mars.tensor.random.multinomial.rst:2
msgid "mars.tensor.random.multinomial"
msgstr ""

#~ msgid "Draw samples from a multinomial distribution."
#~ msgstr ""

#~ msgid ""
#~ "The multinomial distribution is a "
#~ "multivariate generalisation of the binomial"
#~ " distribution.  Take an experiment with "
#~ "one of ``p`` possible outcomes.  An "
#~ "example of such an experiment is "
#~ "throwing a dice, where the outcome "
#~ "can be 1 through 6.  Each sample"
#~ " drawn from the distribution represents "
#~ "`n` such experiments.  Its values, ``X_i"
#~ " = [X_0, X_1, ..., X_p]``, represent"
#~ " the number of times the outcome "
#~ "was ``i``."
#~ msgstr ""

#~ msgid "n"
#~ msgstr ""

#~ msgid "int"
#~ msgstr ""

#~ msgid "Number of experiments."
#~ msgstr ""

#~ msgid "pvals"
#~ msgstr ""

#~ msgid "sequence of floats, length p"
#~ msgstr ""

#~ msgid ""
#~ "Probabilities of each of the ``p`` "
#~ "different outcomes.  These should sum to"
#~ " 1 (however, the last element is "
#~ "always assumed to account for the "
#~ "remaining probability, as long as "
#~ "``sum(pvals[:-1]) <= 1)``."
#~ msgstr ""

#~ msgid "size"
#~ msgstr ""

#~ msgid "int or tuple of ints, optional"
#~ msgstr ""

#~ msgid ""
#~ "Output shape.  If the given shape "
#~ "is, e.g., ``(m, n, k)``, then ``m"
#~ " * n * k`` samples are drawn."
#~ "  Default is None, in which case "
#~ "a single value is returned."
#~ msgstr ""

#~ msgid "chunk_size"
#~ msgstr ""

#~ msgid "int or tuple of int or tuple of ints, optional"
#~ msgstr ""

#~ msgid "Desired chunk size on each dimension"
#~ msgstr ""

#~ msgid "gpu"
#~ msgstr ""

#~ msgid "bool, optional"
#~ msgstr ""

#~ msgid "Allocate the tensor on GPU if True, False as default"
#~ msgstr ""

#~ msgid "dtype"
#~ msgstr ""

#~ msgid "data-type, optional"
#~ msgstr ""

#~ msgid "Data-type of the returned tensor."
#~ msgstr ""

#~ msgid "out"
#~ msgstr ""

#~ msgid "Tensor"
#~ msgstr ""

#~ msgid ""
#~ "The drawn samples, of shape *size*, "
#~ "if that was provided.  If not, the"
#~ " shape is ``(N,)``."
#~ msgstr ""

#~ msgid ""
#~ "In other words, each entry "
#~ "``out[i,j,...,:]`` is an N-dimensional value"
#~ " drawn from the distribution."
#~ msgstr ""

#~ msgid "Throw a dice 20 times:"
#~ msgstr ""

#~ msgid "It landed 4 times on 1, once on 2, etc."
#~ msgstr ""

#~ msgid "Now, throw the dice 20 times, and 20 times again:"
#~ msgstr ""

#~ msgid ""
#~ "For the first run, we threw 3 "
#~ "times 1, 4 times 2, etc.  For "
#~ "the second, we threw 2 times 1,"
#~ " 4 times 2, etc."
#~ msgstr ""

#~ msgid "A loaded die is more likely to land on number 6:"
#~ msgstr ""

#~ msgid ""
#~ "The probability inputs should be "
#~ "normalized. As an implementation detail, "
#~ "the value of the last entry is "
#~ "ignored and assumed to take up any"
#~ " leftover probability mass, but this "
#~ "should not be relied on. A biased"
#~ " coin which has twice as much "
#~ "weight on one side as on the "
#~ "other should be sampled like so:"
#~ msgstr ""

#~ msgid "not like:"
#~ msgstr ""

