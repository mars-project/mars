# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1999-2020, The Alibaba Group Holding Ltd.
# This file is distributed under the same license as the mars package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mars \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-05-07 17:35+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.3\n"

#: ../../source/tensor/generated/mars.tensor.nanmax.rst:2
msgid "mars.tensor.nanmax"
msgstr ""

#: mars.tensor.nanmax:1 of
msgid ""
"Return the maximum of an array or maximum along an axis, ignoring any "
"NaNs.  When all-NaN slices are encountered a ``RuntimeWarning`` is raised"
" and NaN is returned for that slice."
msgstr ""

#: mars.tensor.nanmax:8 of
msgid "a"
msgstr ""

#: mars.tensor.nanmax:7 of
msgid "array_like"
msgstr ""

#: mars.tensor.nanmax:8 of
msgid ""
"Tensor containing numbers whose maximum is desired. If `a` is not a "
"tensor, a conversion is attempted."
msgstr ""

#: mars.tensor.nanmax:11 of
msgid "axis"
msgstr ""

#: mars.tensor.nanmax:10 of
msgid "int, optional"
msgstr ""

#: mars.tensor.nanmax:11 of
msgid ""
"Axis along which the maximum is computed. The default is to compute the "
"maximum of the flattened tensor."
msgstr ""

#: mars.tensor.nanmax:16 of
msgid "out"
msgstr ""

#: mars.tensor.nanmax:15 of
msgid "ndarray, optional"
msgstr ""

#: mars.tensor.nanmax:14 of
msgid ""
"Alternate output array in which to place the result.  The default is "
"``None``; if provided, it must have the same shape as the expected "
"output, but the type will be cast if necessary.  See `doc.ufuncs` for "
"details."
msgstr ""

#: mars.tensor.nanmax:25 of
msgid "keepdims"
msgstr ""

#: mars.tensor.nanmax:24 of
msgid "bool, optional"
msgstr ""

#: mars.tensor.nanmax:19 of
msgid ""
"If this is set to True, the axes which are reduced are left in the result"
" as dimensions with size one. With this option, the result will broadcast"
" correctly against the original `a`."
msgstr ""

#: mars.tensor.nanmax:23 of
msgid ""
"If the value is anything but the default, then `keepdims` will be passed "
"through to the `max` method of sub-classes of `Tensor`.  If the sub-"
"classes methods does not implement `keepdims` any exceptions will be "
"raised."
msgstr ""

#: mars.tensor.nanmax:28 of
msgid "combine_size: int, optional"
msgstr ""

#: mars.tensor.nanmax:28 of
msgid "The number of chunks to combine."
msgstr ""

#: mars.tensor.nanmax:35 of
msgid "nanmax"
msgstr ""

#: mars.tensor.nanmax:34 of
msgid "Tensor"
msgstr ""

#: mars.tensor.nanmax:33 of
msgid ""
"A tensor with the same shape as `a`, with the specified axis removed. If "
"`a` is a 0-d tensor, or if axis is None, a Tensor scalar is returned.  "
"The same dtype as `a` is returned."
msgstr ""

#: mars.tensor.nanmax:39 of
msgid "nanmin :"
msgstr ""

#: mars.tensor.nanmax:40 of
msgid "The minimum value of a tensor along a given axis, ignoring any NaNs."
msgstr ""

#: mars.tensor.nanmax:41 of
msgid "amax :"
msgstr ""

#: mars.tensor.nanmax:42 of
msgid "The maximum value of a tensor along a given axis, propagating any NaNs."
msgstr ""

#: mars.tensor.nanmax:43 of
msgid "fmax :"
msgstr ""

#: mars.tensor.nanmax:44 of
msgid "Element-wise maximum of two tensors, ignoring any NaNs."
msgstr ""

#: mars.tensor.nanmax:45 of
msgid "maximum :"
msgstr ""

#: mars.tensor.nanmax:46 of
msgid "Element-wise maximum of two tensors, propagating any NaNs."
msgstr ""

#: mars.tensor.nanmax:47 of
msgid "isnan :"
msgstr ""

#: mars.tensor.nanmax:48 of
msgid "Shows which elements are Not a Number (NaN)."
msgstr ""

#: mars.tensor.nanmax:50 of
msgid "isfinite:"
msgstr ""

#: mars.tensor.nanmax:50 of
msgid "Shows which elements are neither NaN nor infinity."
msgstr ""

#: mars.tensor.nanmax:52 of
msgid "amin, fmin, minimum"
msgstr ""

#: mars.tensor.nanmax:56 of
msgid ""
"Mars uses the IEEE Standard for Binary Floating-Point for Arithmetic "
"(IEEE 754). This means that Not a Number is not equivalent to infinity. "
"Positive infinity is treated as a very large number and negative infinity"
" is treated as a very small (i.e. negative) number."
msgstr ""

#: mars.tensor.nanmax:61 of
msgid "If the input has a integer type the function is equivalent to np.max."
msgstr ""

#: mars.tensor.nanmax:75 of
msgid "When positive infinity and negative infinity are present:"
msgstr ""

