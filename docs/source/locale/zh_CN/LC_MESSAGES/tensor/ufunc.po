# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2018, The Alibaba Group Holding Ltd.
# This file is distributed under the same license as the mars package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mars \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-05-04 10:40+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Chen Quan <ChenQuan@osai.club>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../source/tensor/ufunc.rst:2
msgid "Universal Functions (ufunc)"
msgstr ""
"通用函数(ufunc)"

#: ../../source/tensor/ufunc.rst:4
msgid ""
"Mars tensor provides universal functions(a.k.a ufuncs) to support various"
" elementwise operations. Mars tensor's ufunc supports following features "
"of Numpy's one:"
msgstr ""
"Mars tensor提供通用函数(也被称为ufuncs)来支持各种元素操作。"
"Mars tensor的ufunc支持Numpy的以下功能："

#: ../../source/tensor/ufunc.rst:7
msgid "Broadcasting"
msgstr ""
"广播"

#: ../../source/tensor/ufunc.rst:8
msgid "Output type determination"
msgstr ""
"输出类型确定"

#: ../../source/tensor/ufunc.rst:9
msgid "Casting rules"
msgstr ""
"类型转换规则"

#: ../../source/tensor/ufunc.rst:11
msgid ""
"Mars tensor's ufunc currently does not support methods like ``reduce``, "
"``accumulate``, ``reduceat``, ``outer``, and ``at``."
msgstr ""
"Mars张量ufunc目前不支持包括方法有 ``accumulate``, ``reduceat``, ``outer`` 和 ``at``。"

#: ../../source/tensor/ufunc.rst:15
msgid "Available ufuncs"
msgstr ""
"可用的ufuncs"

#: ../../source/tensor/ufunc.rst:18
msgid "Math operations"
msgstr ""
"数学运算"

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.add <mars.tensor.add>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Add arguments element-wise."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.subtract <mars.tensor.subtract>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Subtract arguments, element-wise."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.multiply <mars.tensor.multiply>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Multiply arguments element-wise."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.divide <mars.tensor.divide>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Divide arguments element-wise."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.logaddexp <mars.tensor.logaddexp>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Logarithm of the sum of exponentiations of the inputs."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.logaddexp2 <mars.tensor.logaddexp2>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Logarithm of the sum of exponentiations of the inputs in base-2."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.true_divide <mars.tensor.true_divide>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Returns a true division of the inputs, element-wise."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.floor_divide <mars.tensor.floor_divide>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Return the largest integer smaller or equal to the division of the inputs."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.negative <mars.tensor.negative>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Numerical negative, element-wise."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.power <mars.tensor.power>`"
msgstr ""

#: ../../<autosummary>:1
msgid "First tensor elements raised to powers from second tensor, element-wise."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.remainder <mars.tensor.remainder>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Return element-wise remainder of division."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.mod <mars.tensor.mod>`"
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.fmod <mars.tensor.fmod>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Return the element-wise remainder of division."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.absolute <mars.tensor.absolute>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Calculate the absolute value element-wise."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.rint <mars.tensor.rint>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Round elements of the tensor to the nearest integer."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.sign <mars.tensor.sign>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Returns an element-wise indication of the sign of a number."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.exp <mars.tensor.exp>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Calculate the exponential of all elements in the input tensor."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.exp2 <mars.tensor.exp2>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Calculate `2**p` for all `p` in the input tensor."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.log <mars.tensor.log>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Natural logarithm, element-wise."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.log2 <mars.tensor.log2>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Base-2 logarithm of `x`."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.log10 <mars.tensor.log10>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Return the base 10 logarithm of the input tensor, element-wise."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.expm1 <mars.tensor.expm1>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Calculate ``exp(x) - 1`` for all elements in the tensor."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.log1p <mars.tensor.log1p>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Return the natural logarithm of one plus the input tensor, element-wise."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.sqrt <mars.tensor.sqrt>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Return the positive square-root of an tensor, element-wise."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.square <mars.tensor.square>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Return the element-wise square of the input."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.reciprocal <mars.tensor.reciprocal>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Return the reciprocal of the argument, element-wise."
msgstr ""

#: ../../source/tensor/ufunc.rst:53
msgid "Trigonometric functions"
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.sin <mars.tensor.sin>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Trigonometric sine, element-wise."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.cos <mars.tensor.cos>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Cosine element-wise."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.tan <mars.tensor.tan>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Compute tangent element-wise."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.arcsin <mars.tensor.arcsin>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Inverse sine, element-wise."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.arccos <mars.tensor.arccos>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Trigonometric inverse cosine, element-wise."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.arctan <mars.tensor.arctan>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Trigonometric inverse tangent, element-wise."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.arctan2 <mars.tensor.arctan2>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Element-wise arc tangent of ``x1/x2`` choosing the quadrant correctly."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.hypot <mars.tensor.hypot>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Given the \"legs\" of a right triangle, return its hypotenuse."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.sinh <mars.tensor.sinh>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Hyperbolic sine, element-wise."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.cosh <mars.tensor.cosh>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Hyperbolic cosine, element-wise."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.tanh <mars.tensor.tanh>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Compute hyperbolic tangent element-wise."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.arcsinh <mars.tensor.arcsinh>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Inverse hyperbolic sine element-wise."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.arccosh <mars.tensor.arccosh>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Inverse hyperbolic cosine, element-wise."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.arctanh <mars.tensor.arctanh>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Inverse hyperbolic tangent element-wise."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.deg2rad <mars.tensor.deg2rad>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Convert angles from degrees to radians."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.rad2deg <mars.tensor.rad2deg>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Convert angles from radians to degrees."
msgstr ""

#: ../../source/tensor/ufunc.rst:78
msgid "Bit-twiddling functions"
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.bitwise_and <mars.tensor.bitwise_and>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Compute the bit-wise AND of two tensors element-wise."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.bitwise_or <mars.tensor.bitwise_or>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Compute the bit-wise OR of two tensors element-wise."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.bitwise_xor <mars.tensor.bitwise_xor>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Compute the bit-wise XOR of two arrays element-wise."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.invert <mars.tensor.invert>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Compute bit-wise inversion, or bit-wise NOT, element-wise."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.left_shift <mars.tensor.left_shift>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Shift the bits of an integer to the left."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.right_shift <mars.tensor.right_shift>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Shift the bits of an integer to the right."
msgstr ""

#: ../../source/tensor/ufunc.rst:93
msgid "Comparison functions"
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.greater <mars.tensor.greater>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Return the truth value of (x1 > x2) element-wise."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.greater_equal <mars.tensor.greater_equal>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Return the truth value of (x1 >= x2) element-wise."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.less <mars.tensor.less>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Return the truth value of (x1 < x2) element-wise."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.less_equal <mars.tensor.less_equal>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Return the truth value of (x1 =< x2) element-wise."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.not_equal <mars.tensor.not_equal>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Return (x1 != x2) element-wise."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.equal <mars.tensor.equal>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Return (x1 == x2) element-wise."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.logical_and <mars.tensor.logical_and>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Compute the truth value of x1 AND x2 element-wise."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.logical_or <mars.tensor.logical_or>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Compute the truth value of x1 OR x2 element-wise."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.logical_xor <mars.tensor.logical_xor>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Compute the truth value of x1 XOR x2, element-wise."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.logical_not <mars.tensor.logical_not>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Compute the truth value of NOT x element-wise."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.maximum <mars.tensor.maximum>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Element-wise maximum of tensor elements."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.minimum <mars.tensor.minimum>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Element-wise minimum of tensor elements."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.fmax <mars.tensor.fmax>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Element-wise maximum of array elements."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.fmin <mars.tensor.fmin>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Element-wise minimum of array elements."
msgstr ""

#: ../../source/tensor/ufunc.rst:116
msgid "Floating point values"
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.isfinite <mars.tensor.isfinite>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Test element-wise for finiteness (not infinity or not Not a Number)."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.isinf <mars.tensor.isinf>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Test element-wise for positive or negative infinity."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.isnan <mars.tensor.isnan>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Test element-wise for NaN and return result as a boolean tensor."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.signbit <mars.tensor.signbit>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Returns element-wise True where signbit is set (less than zero)."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.copysign <mars.tensor.copysign>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Change the sign of x1 to that of x2, element-wise."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.nextafter <mars.tensor.nextafter>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Return the next floating-point value after x1 towards x2, element-wise."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.modf <mars.tensor.modf>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Return the fractional and integral parts of a tensor, element-wise."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.ldexp <mars.tensor.ldexp>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Returns x1 * 2**x2, element-wise."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.frexp <mars.tensor.frexp>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Decompose the elements of x into mantissa and twos exponent."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.floor <mars.tensor.floor>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Return the floor of the input, element-wise."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.ceil <mars.tensor.ceil>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Return the ceiling of the input, element-wise."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`mars.tensor.trunc <mars.tensor.trunc>`"
msgstr ""

#: ../../<autosummary>:1
msgid "Return the truncated value of the input, element-wise."
msgstr ""

