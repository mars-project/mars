[metadata]
name = pymars
description = MARS: a tensor-based unified framework for large-scale data computation.
long_description = file: README.rst
long_description_content_type = text/x-rst
author = Qin Xuye
author_email = qin@qinxuye.me
maintainer = Qin Xuye
maintainer_email = qin@qinxuye.me
license = Apache License 2.0
url = http://github.com/mars-project/mars
python_requires = >=3.6
classifier =
    Operating System :: OS Independent
    Programming Language :: Python
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: Implementation :: CPython
    Topic :: Software Development :: Libraries

[options]
zip_safe = False
include_package_data = True
packages = find:
install_requires =
    numpy>=1.14.0
    pandas>=1.0.0,<1.2.0; python_version<"3.7"
    pandas>=1.0.0; python_version>="3.7"
    requests>=2.4.0
    cloudpickle>=1.5.0
    pyyaml>=5.1
    psutil>=4.0.0
    aiohttp>=3.7.0
    pickle5; python_version<"3.8"
    async_generator; python_version<"3.7"
    dataclasses; python_version<"3.7"
    shared-memory38>=0.1.1; python_version<"3.8"
    asyncio37>=0.1.3; python_version<"3.7"

[options.packages.find]
exclude =
    *.tests.*
    *.tests

[options.entry_points]
console_scripts =
    mars-supervisor = mars.deploy.oscar.supervisor:main
    mars-worker = mars.deploy.oscar.worker:main

[options.extras_require]
dev =
    pyarrow>=0.11.0,!=0.16.*
    cython>=0.29
    pytest>=3.5.0
    pytest-cov>=2.5.0
    pytest-timeout>=1.2.0
    pytest-forked>=1.0
    pytest-asyncio>=0.14.0
    sqlalchemy>=1.2.0
    scipy>=1.0.0
    scikit-learn>=0.20
    numexpr>=2.6.4
    bokeh>=1.0.0
    jinja2>=2.0
    mock>=4.0.0; python_version<"3.8"
    tornado>=6.0
distributed =
    scipy>=1.0.0
    scikit-learn>=0.20
    numexpr>=2.6.4
    pyarrow>=0.11.0,!=0.16.*
    lz4>=1.0.0
    bokeh>=1.0.0
    sqlalchemy>=1.2.0
    jinja2>=2.0
    tornado>=6.0
extra =
    scipy>=1.0.0
    scikit-learn>=0.20
    numexpr>=2.6.4
    pyarrow>=0.11.0,!=0.16.*
    lz4>=1.0.0
    bokeh>=1.0.0
    sqlalchemy>=1.2.0
    jinja2>=2.0
    tornado>=6.0
vineyard =
    vineyard==0.2.4; sys.platform != "win32"

[tool:pytest]
markers =
    cuda: mark a test as a cuda case.
    hadoop: mark test as a hadoop case.
    ray: mark test as a ray case.

[coverage:run]
branch = True
relative_files = True
cover_pylib = False
parallel = True
concurrency = multiprocessing,thread
plugins = Cython.Coverage
include =
    mars/*
omit =
    mars/compat.py
    mars/lib/aio/_runners.py
    mars/lib/aio/lru.py
    mars/lib/functools32/*
    mars/lib/futures/*
    mars/lib/six.py
    mars/lib/nvutils.py
    mars/lib/tblib/*
    mars/lib/uhashring/*
    mars/learn/contrib/xgboost/tracker.py
    mars/learn/cluster/_k_means_fast.*
    mars/learn/cluster/_k_means_elkan.pyx
    mars/learn/cluster/_k_means_lloyd.pyx
    mars/learn/proxima/*
    mars/learn/utils/_cython_blas.*
    mars/tensor/einsum/einsumfunc.py
    mars/storage/cuda.py
    *.html
    *.pxd
    */tests/*
    mars/deploy/kubedl/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    return NotImplemented

[flake8]
max-complexity = 10
max-line-length = 127
exclude =
    __init__.py
    __pycache__
    mars/lib/nvutils.py
    mars/lib/uhashring/*
    mars/lib/version.py
