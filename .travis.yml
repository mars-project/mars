language: python

matrix:
  include:
    - os: linux
      python: "2.7"
      services:
        - docker
      env: DOCKER_IMAGE=quay.io/pypa/manylinux1_x86_64 PYVER=cp27-cp27mu
    - os: linux
      python: "3.5"
      services:
        - docker
      env: DOCKER_IMAGE=quay.io/pypa/manylinux1_x86_64 PYVER=cp35-cp35m CI_MODE=1
    - os: linux
      python: "3.6"
      services:
        - docker
      env: DOCKER_IMAGE=quay.io/pypa/manylinux1_x86_64 PYVER=cp36-cp36m
    - os: linux
      python: "3.7"
      dist: xenial
      services:
        - docker
      env: DOCKER_IMAGE=quay.io/pypa/manylinux1_x86_64 PYVER=cp37-cp37m
    - os: osx
      language: generic
      env: PYTHON=2.7.12
    - os: osx
      language: generic
      env: PYTHON=3.5.3
    - os: osx
      language: generic
      env: PYTHON=3.6.1
    - os: osx
      language: generic
      env: PYTHON=3.7.1

before_install:
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then source ./bin/travis-prepare-osx.sh; fi
  - pip install --upgrade pip setuptools wheel coverage

# command to install dependencies
install:
  - export DEFAULT_VENV=$VIRTUAL_ENV
  - pip install -r requirements-dev.txt
  - pip install -r requirements-extra.txt
  - pip install virtualenv coveralls flake8
  - bash bin/fix-gevent-cov.sh  # temporary fix on cython coverage problem
  - virtualenv venv && source venv/bin/activate
  - pip install -r requirements.txt
  - pip install pytest pytest-timeout etcd-gevent
  - if [ -z "$DEFAULT_VENV" ]; then deactivate; else source $DEFAULT_VENV/bin/activate; fi
  - python setup.py build_ext --force --inplace
  - source bin/download-etcd.sh

before_script:
  - flake8 mars --count --select=E111,E901,E999,F401,F821,F822,F823,F841 --show-source --statistics
  - flake8 mars --count --exit-zero --statistics

# command to run tests
script:
  mkdir -p build &&
  pytest --cov-report= --cov-config .coveragerc-tensor --cov=mars --timeout=1500 -W ignore::PendingDeprecationWarning
    mars/tensor mars/web &&
  mv .coverage build/.coverage.tensor.file &&
  pytest --cov-report= --cov-config .coveragerc --cov=mars --timeout=1500 --forked -W ignore::PendingDeprecationWarning
    $(find mars -maxdepth 1 -mindepth 1 -type d -not -path "mars/tensor" -not -path "*__pycache__*") &&
  mv .coverage build/.coverage.main.file &&
  coverage combine build/ && coverage report --fail-under=80 &&
  export DEFAULT_VENV=$VIRTUAL_ENV &&
  source venv/bin/activate &&
  pytest --timeout=1500 mars/tests/test_session.py &&
  if [ -z "$DEFAULT_VENV" ]; then deactivate; else source $DEFAULT_VENV/bin/activate; fi

after_success:
  - coveralls
  - ./bin/travis-upload.sh
# Add env var to detect it during build
env: TRAVIS=True
