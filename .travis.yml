language: python
env:
  global:
    - COVERALLS_PARALLEL=true
    - NUMPY_EXPERIMENTAL_ARRAY_FUNCTION='1'
notifications:
  webhooks:
    - https://coveralls.io/webhook
matrix:
  include:
    - os: linux
      language: generic
      services:
        - docker
      env: PYTHON=2.7 DOCKER_IMAGE=quay.io/pypa/manylinux1_x86_64 PYVER=cp27-cp27mu:cp27-cp27m
    - os: osx
      language: generic
      env: PYTHON=2.7
    - os: linux
      language: generic
      services:
        - docker
      env: PYTHON=3.5 DOCKER_IMAGE=quay.io/pypa/manylinux1_x86_64 PYVER=cp35-cp35m CYTHON_TRACE=1
    - os: osx
      language: generic
      env: PYTHON=3.5
    - os: linux
      language: generic
      services:
        - docker
      env: PYTHON=3.6 DOCKER_IMAGE=quay.io/pypa/manylinux1_x86_64 PYVER=cp36-cp36m
    - os: osx
      language: generic
      env: PYTHON=3.6
    - os: linux
      language: generic
      dist: xenial
      services:
        - docker
      env: PYTHON=3.7 DOCKER_IMAGE=quay.io/pypa/manylinux1_x86_64 PYVER=cp37-cp37m
    - os: osx
      language: generic
      env: PYTHON=3.7
    - os: linux
      language: generic
      dist: xenial
      services:
        - docker
      env: PYTHON=3.7 WITH_KUBERNETES=1 NO_DEPLOY=1 NO_COMMON_TESTS=1

addons:
  apt:
    update: true
before_install:
  - source ./bin/ci/travis-install-conda.sh
  - if [[ "$PYTHON" =~ "2" ]]; then
      pip install --upgrade pip\<19 setuptools\<40.7 wheel coverage;
    else
      pip install --upgrade pip setuptools wheel coverage;
    fi

# command to install dependencies
install:
  - export DEFAULT_VENV=$VIRTUAL_ENV
  - if [ -n "$TRAVIS_TAG" ]; then unset CYTHON_TRACE; fi
  - if [ -z "$CYTHON_TRACE" ]; then
      for cf in `ls .coveragerc*`; do
        sed -i.bak "s/plugins *= *Cython\.Coverage//g" $cf;
      done
    fi
  - pip install -r requirements-dev.txt &&
    pip install -r requirements-extra.txt &&
    pip install virtualenv coveralls flake8 etcd-gevent
  - if [[ $TRAVIS_OS_NAME == "linux" ]] && [[ -z "$NO_COMMON_TESTS" ]] && [[ ! "$PYTHON" =~ "3.5" ]]; then
      conda install --quiet --yes -n test -c conda-forge python=$PYTHON "tiledb-py>=0.4.3" || true;
      conda install --quiet --yes -n test -c pkgs/main python=$PYTHON certifi;
    fi
  - if [[ ! "$PYTHON" =~ "3.5" ]] && [[ -z "$NO_COMMON_TESTS" ]]; then
      conda install --quiet --yes -n test -c conda-forge --no-deps python=$PYTHON libxgboost py-xgboost xgboost;
    fi
  - if [ -z "$NO_COMMON_TESTS" ]; then
      virtualenv testenv && source testenv/bin/activate;
      pip install -r requirements.txt && pip install pytest pytest-timeout;
      if [ -z "$DEFAULT_VENV" ]; then
        deactivate;
      else
        source $DEFAULT_VENV/bin/activate;
      fi
    fi
  - python setup.py build_ext --force --inplace
  - source bin/ci/download-etcd.sh
  - if [ -n "$WITH_KUBERNETES" ]; then
      ./bin/ci/travis-install-minikube.sh;
      pip install kubernetes;
    fi

before_script:
  - flake8 mars --count --select=E111,E901,E999,F401,F821,F822,F823,F841 --show-source --statistics
  - flake8 mars --count --exit-zero --statistics

# command to run tests
script:
  - source ./bin/ci/travis-run-tests.sh

after_success:
  - coveralls
  - ./bin/ci/travis-upload.sh

after_failure:
  # delay to make all data in stdout loaded by travis
  - sleep 5
